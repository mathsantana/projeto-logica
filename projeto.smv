MODULE funcionario(acesso)

VAR 

    sala: {fora, seguro, critico, confidencial};

INIT
    sala = fora;

ASSIGN
	next(sala) := case
			sala = fora: {fora, seguro};
			sala = seguro & acesso = seguro: {fora, seguro};
			sala = seguro & (acesso = critico | acesso = confidencial): {fora, seguro, critico};
			sala = critico & acesso = critico: {seguro, critico};
			sala = critico & acesso = confidencial: {seguro, critico, confidencial};
			sala = confidencial: {critico, confidencial};
			TRUE: sala;

			esac;
FAIRNESS
	running;

MODULE main

VAR 

a1: {seguro};
a2: {critico};
a3: {confidencial};

f1: process funcionario(a1);
f2: process funcionario(a2);
f3: process funcionario(a3);

SPEC !(EF (f1.sala = confidencial))
SPEC !(EF (f1.sala = critico))
SPEC !(EF (f2.sala = confidencial))
SPEC EF (f2.sala = critico)
SPEC EF (f3.sala = confidencial)
SPEC EX (f1.sala = seguro)
SPEC EX (f2.sala = seguro)
SPEC !(EX (f2.sala = critico))
SPEC E [f1.sala = fora U f1.sala = seguro]
SPEC !(E [f2.sala = fora U f2.sala = critico])
